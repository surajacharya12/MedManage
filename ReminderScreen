import 'package:flutter/material.dart';
import 'package:medmanage3/widegets/alarm_manager.dart';
//import 'package:medmanage3/widegets/alarm_manager.dart';

class ReminderScreen extends StatefulWidget {
  @override
  _ReminderScreenState createState() => _ReminderScreenState();
}

class _ReminderScreenState extends State<ReminderScreen> {
  bool _showClockPicker = false;
  DateTime? _selectedTime;
  List<bool> _daysOfWeek = List.filled(7, false);

  void _selectTime() async {
    TimeOfDay? picked = await showTimePicker(
      context: context,
      initialTime: TimeOfDay.now(),
    );
    if (picked != null) {
      setState(() {
        _selectedTime = DateTime(
          DateTime.now().year,
          DateTime.now().month,
          DateTime.now().day,
          picked.hour,
          picked.minute,
        );
      });
    }
  }

  void _setReminder() async {
    if (_selectedTime != null && _daysOfWeek.contains(true)) {
      List<int> selectedDays = [];
      for (int i = 0; i < _daysOfWeek.length; i++) {
        if (_daysOfWeek[i]) selectedDays.add(i + 1);
      }

      await AlarmManager.scheduleRecurringAlarm(
        _selectedTime!,
        'It\'s time to take your medicine!',
        selectedDays,
      );

      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Reminder set successfully!'),
          backgroundColor: Colors.green,
        ),
      );
      setState(() {
        _showClockPicker = false;
      });
    } else {
      // Alert user if time or days are not properly set
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(
              'Please select a time and at least one day for the reminder.'),
          backgroundColor: Colors.red,
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[100],
      appBar: AppBar(
        title: Text("Set Dose Reminder",
            style: TextStyle(fontWeight: FontWeight.bold)),
        backgroundColor: Colors.purple[600],
      ),
      body: Center(
        child: _showClockPicker
            ? Padding(
                padding: const EdgeInsets.all(20.0),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Container(
                      padding: EdgeInsets.all(20.0),
                      decoration: BoxDecoration(
                        color: Colors.purple[100],
                        borderRadius: BorderRadius.circular(12),
                        boxShadow: [
                          BoxShadow(
                            blurRadius: 8.0,
                            spreadRadius: 2,
                            color: Colors.purple.withOpacity(0.2),
                          ),
                        ],
                      ),
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            "Set Reminder Time",
                            style: TextStyle(
                                fontSize: 20,
                                fontWeight: FontWeight.bold,
                                color: Colors.purple[700]),
                          ),
                          SizedBox(height: 20),
                          if (_selectedTime != null)
                            Padding(
                              padding: EdgeInsets.symmetric(vertical: 10),
                              child: Text(
                                "Time: ${_selectedTime!.hour.toString().padLeft(2, '0')}:${_selectedTime!.minute.toString().padLeft(2, '0')}",
                                style: TextStyle(
                                    fontSize: 18, fontWeight: FontWeight.w500),
                              ),
                            ),
                          ElevatedButton(
                            onPressed: _selectTime,
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.purple[600],
                              shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(12)),
                            ),
                            child: Padding(
                              padding: EdgeInsets.symmetric(
                                  horizontal: 24.0, vertical: 12.0),
                              child: Text(
                                _selectedTime == null
                                    ? "Select Time"
                                    : "Change Time",
                                style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.bold,
                                    color: Colors.white),
                              ),
                            ),
                          ),
                          SizedBox(height: 20),
                          Text(
                            "Select Days",
                            style: TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                                color: Colors.purple[700]),
                          ),
                          SizedBox(height: 10),
                          Wrap(
                            spacing: 8.0,
                            runSpacing: 8.0,
                            children: List.generate(7, (index) {
                              return FilterChip(
                                label: Text(
                                  [
                                    "Sun",
                                    "Mon",
                                    "Tue",
                                    "Wed",
                                    "Thu",
                                    "Fri",
                                    "Sat"
                                  ][index],
                                  style: TextStyle(
                                      fontSize: 14,
                                      fontWeight: FontWeight.w500),
                                ),
                                selected: _daysOfWeek[index],
                                selectedColor: Colors.purple[300],
                                backgroundColor: Colors.purple[50],
                                onSelected: (selected) {
                                  setState(() {
                                    _daysOfWeek[index] = selected;
                                  });
                                },
                              );
                            }),
                          ),
                          SizedBox(height: 20),
                          ElevatedButton(
                            onPressed: _setReminder,
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.purple[600],
                              shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(12)),
                            ),
                            child: Padding(
                              padding: EdgeInsets.symmetric(
                                  horizontal: 24.0, vertical: 12.0),
                              child: Text(
                                "Set Reminder",
                                style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.bold,
                                    color: Colors.white),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              )
            : FloatingActionButton(
                onPressed: () {
                  setState(() {
                    _showClockPicker = true;
                  });
                },
                child: Icon(Icons.add, color: Colors.white),
                backgroundColor: Colors.purple[600],
              ),
      ),
    );
  }
}

